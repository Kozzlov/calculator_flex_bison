Grammar

    0 $accept: start $end

    1 start: /* empty */
    2      | start main_function_block_pair PERFORM_ACTION main_action_block_pair
    3      | start main_function_block_single PERFORM_ACTION main_action_block_single

    4 main_function_block_pair: FUNCTION FUNCTION_OPEN_TAG action_logic_pair FUNCTION_CLOSE_TAG

    5 main_action_block_pair: EXPRESSION_OPEN_TAG action_pair EXPRESSION_CLOSE_TAG

    6 main_function_block_single: FUNCTION FUNCTION_OPEN_TAG action_logic_single FUNCTION_CLOSE_TAG

    7 main_action_block_single: EXPRESSION_OPEN_TAG action_single EXPRESSION_CLOSE_TAG

    8 action_logic_pair: NUM IN_FUNCTION_COMMA NUM

    9 action_logic_single: NUM

   10 action_pair: POWER
   11            | MULTIPLICATION
   12            | DIVISION
   13            | MODULO
   14            | SUM
   15            | SUBTRACTION
   16            | LOG

   17 action_single: LOG_NATURAL
   18              | SIN
   19              | COS
   20              | TAN
   21              | CTN
   22              | SQRT


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4 6
NUM (259) 8 9
FUNCTION_OPEN_TAG (260) 4 6
IN_FUNCTION_COMMA (261) 8
FUNCTION_CLOSE_TAG (262) 4 6
EXPRESSION_OPEN_TAG (263) 5 7
EXPRESSION_CLOSE_TAG (264) 5 7
PERFORM_ACTION (265) 2 3
SIN (266) 18
COS (267) 19
TAN (268) 20
CTN (269) 21
LOG (270) 16
LOG_NATURAL (271) 17
POWER (272) 10
SQRT (273) 22
MULTIPLICATION (274) 11
DIVISION (275) 12
MODULO (276) 13
SUM (277) 14
SUBTRACTION (278) 15


Nonterminals, with rules where they appear

$accept (24)
    on left: 0
start (25)
    on left: 1 2 3, on right: 0 2 3
main_function_block_pair (26)
    on left: 4, on right: 2
main_action_block_pair (27)
    on left: 5, on right: 2
main_function_block_single (28)
    on left: 6, on right: 3
main_action_block_single (29)
    on left: 7, on right: 3
action_logic_pair (30)
    on left: 8, on right: 4
action_logic_single (31)
    on left: 9, on right: 6
action_pair (32)
    on left: 10 11 12 13 14 15 16, on right: 5
action_single (33)
    on left: 17 18 19 20 21 22, on right: 7


state 0

    0 $accept: . start $end

    $default  reduce using rule 1 (start)

    start  go to state 1


state 1

    0 $accept: start . $end
    2 start: start . main_function_block_pair PERFORM_ACTION main_action_block_pair
    3      | start . main_function_block_single PERFORM_ACTION main_action_block_single

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    main_function_block_pair    go to state 4
    main_function_block_single  go to state 5


state 2

    0 $accept: start $end .

    $default  accept


state 3

    4 main_function_block_pair: FUNCTION . FUNCTION_OPEN_TAG action_logic_pair FUNCTION_CLOSE_TAG
    6 main_function_block_single: FUNCTION . FUNCTION_OPEN_TAG action_logic_single FUNCTION_CLOSE_TAG

    FUNCTION_OPEN_TAG  shift, and go to state 6


state 4

    2 start: start main_function_block_pair . PERFORM_ACTION main_action_block_pair

    PERFORM_ACTION  shift, and go to state 7


state 5

    3 start: start main_function_block_single . PERFORM_ACTION main_action_block_single

    PERFORM_ACTION  shift, and go to state 8


state 6

    4 main_function_block_pair: FUNCTION FUNCTION_OPEN_TAG . action_logic_pair FUNCTION_CLOSE_TAG
    6 main_function_block_single: FUNCTION FUNCTION_OPEN_TAG . action_logic_single FUNCTION_CLOSE_TAG

    NUM  shift, and go to state 9

    action_logic_pair    go to state 10
    action_logic_single  go to state 11


state 7

    2 start: start main_function_block_pair PERFORM_ACTION . main_action_block_pair

    EXPRESSION_OPEN_TAG  shift, and go to state 12

    main_action_block_pair  go to state 13


state 8

    3 start: start main_function_block_single PERFORM_ACTION . main_action_block_single

    EXPRESSION_OPEN_TAG  shift, and go to state 14

    main_action_block_single  go to state 15


state 9

    8 action_logic_pair: NUM . IN_FUNCTION_COMMA NUM
    9 action_logic_single: NUM .

    IN_FUNCTION_COMMA  shift, and go to state 16

    $default  reduce using rule 9 (action_logic_single)


state 10

    4 main_function_block_pair: FUNCTION FUNCTION_OPEN_TAG action_logic_pair . FUNCTION_CLOSE_TAG

    FUNCTION_CLOSE_TAG  shift, and go to state 17


state 11

    6 main_function_block_single: FUNCTION FUNCTION_OPEN_TAG action_logic_single . FUNCTION_CLOSE_TAG

    FUNCTION_CLOSE_TAG  shift, and go to state 18


state 12

    5 main_action_block_pair: EXPRESSION_OPEN_TAG . action_pair EXPRESSION_CLOSE_TAG

    LOG             shift, and go to state 19
    POWER           shift, and go to state 20
    MULTIPLICATION  shift, and go to state 21
    DIVISION        shift, and go to state 22
    MODULO          shift, and go to state 23
    SUM             shift, and go to state 24
    SUBTRACTION     shift, and go to state 25

    action_pair  go to state 26


state 13

    2 start: start main_function_block_pair PERFORM_ACTION main_action_block_pair .

    $default  reduce using rule 2 (start)


state 14

    7 main_action_block_single: EXPRESSION_OPEN_TAG . action_single EXPRESSION_CLOSE_TAG

    SIN          shift, and go to state 27
    COS          shift, and go to state 28
    TAN          shift, and go to state 29
    CTN          shift, and go to state 30
    LOG_NATURAL  shift, and go to state 31
    SQRT         shift, and go to state 32

    action_single  go to state 33


state 15

    3 start: start main_function_block_single PERFORM_ACTION main_action_block_single .

    $default  reduce using rule 3 (start)


state 16

    8 action_logic_pair: NUM IN_FUNCTION_COMMA . NUM

    NUM  shift, and go to state 34


state 17

    4 main_function_block_pair: FUNCTION FUNCTION_OPEN_TAG action_logic_pair FUNCTION_CLOSE_TAG .

    $default  reduce using rule 4 (main_function_block_pair)


state 18

    6 main_function_block_single: FUNCTION FUNCTION_OPEN_TAG action_logic_single FUNCTION_CLOSE_TAG .

    $default  reduce using rule 6 (main_function_block_single)


state 19

   16 action_pair: LOG .

    $default  reduce using rule 16 (action_pair)


state 20

   10 action_pair: POWER .

    $default  reduce using rule 10 (action_pair)


state 21

   11 action_pair: MULTIPLICATION .

    $default  reduce using rule 11 (action_pair)


state 22

   12 action_pair: DIVISION .

    $default  reduce using rule 12 (action_pair)


state 23

   13 action_pair: MODULO .

    $default  reduce using rule 13 (action_pair)


state 24

   14 action_pair: SUM .

    $default  reduce using rule 14 (action_pair)


state 25

   15 action_pair: SUBTRACTION .

    $default  reduce using rule 15 (action_pair)


state 26

    5 main_action_block_pair: EXPRESSION_OPEN_TAG action_pair . EXPRESSION_CLOSE_TAG

    EXPRESSION_CLOSE_TAG  shift, and go to state 35


state 27

   18 action_single: SIN .

    $default  reduce using rule 18 (action_single)


state 28

   19 action_single: COS .

    $default  reduce using rule 19 (action_single)


state 29

   20 action_single: TAN .

    $default  reduce using rule 20 (action_single)


state 30

   21 action_single: CTN .

    $default  reduce using rule 21 (action_single)


state 31

   17 action_single: LOG_NATURAL .

    $default  reduce using rule 17 (action_single)


state 32

   22 action_single: SQRT .

    $default  reduce using rule 22 (action_single)


state 33

    7 main_action_block_single: EXPRESSION_OPEN_TAG action_single . EXPRESSION_CLOSE_TAG

    EXPRESSION_CLOSE_TAG  shift, and go to state 36


state 34

    8 action_logic_pair: NUM IN_FUNCTION_COMMA NUM .

    $default  reduce using rule 8 (action_logic_pair)


state 35

    5 main_action_block_pair: EXPRESSION_OPEN_TAG action_pair EXPRESSION_CLOSE_TAG .

    $default  reduce using rule 5 (main_action_block_pair)


state 36

    7 main_action_block_single: EXPRESSION_OPEN_TAG action_single EXPRESSION_CLOSE_TAG .

    $default  reduce using rule 7 (main_action_block_single)
